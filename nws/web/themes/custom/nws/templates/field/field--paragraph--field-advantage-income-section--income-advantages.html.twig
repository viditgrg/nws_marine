{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_field()
 */
#}
{%
  set classes = [
    'field',
    'field--name-' ~ field_name|clean_class,
    'field--type-' ~ field_type|clean_class,
    'field--label-' ~ label_display,
    label_display == 'inline' ? 'clearfix',
  ]
%}
{%
  set title_classes = [
    'field__label',
    label_display == 'visually_hidden' ? 'visually-hidden',
  ]
%}


{% for key, item in items %}
	<div data-index="{{ key }}" class="content" style="display:block">
		{{ item.content }}
	</div>
{% endfor %}

{% for key, item in items %}
	{% if key == 0 %}
		<div class="circular-number" data-index="{{ key }}" style="transform: rotate(0deg) translate(235px) rotate(-0deg)">
			{% set i = key + 1 %}
			0{{ i }}
		</div>
		<div style="transform: rotate(-25.714285714286deg)" data-index="{{ key }}" class="circular-divider"></div>
	{% else %}
		<div class="circular-number" data-index="{{ key }}" style="transform: rotate({% set t = (51.428571428571 * key) %} {{ t }}deg) translate(235px) rotate({% set t = (51.428571428571 * key) %} -{{ t }}deg)">
			{% set i = key + 1 %}
			0{{ i }}
		</div>
		<div style="transform: rotate({% set r = -25.714285714286 + (51.428571428571 * key) %} {{ r }}deg)" data-index="{{ key }}" class="circular-divider"></div>

	{% endif %}
{% endfor %}
